{"version":3,"file":"static/js/805.f6668ad7.chunk.js","mappings":"+NACA,EAAyB,wB,uCCIJA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAQjB,WAAYC,GAAQ,IAAD,yBACf,cAAMA,IAEDC,MAAQ,CACT,EAAKC,WAAW,EAAG,kBACnB,EAAKA,WAAW,IAAK,eACrB,EAAKA,WAAW,KAAM,eACtB,EAAKA,WAAW,IAAM,YACtB,EAAKA,WAAW,IAAM,sBACtB,EAAKA,WAAW,IAAM,cAG1B,EAAKC,cAAgB,EAAKF,MAAMG,QAAQC,UAExC,EAAKC,UAAY,KAEjB,EAAKC,MAAQ,CACTC,WAAY,EAAKC,kBAjBN,CAmBlB,CA6EA,OA7EA,kCAED,SAAWC,EAAUC,GACjB,MAAO,CACHD,SAAAA,EACAC,KAAAA,EAEP,iCAED,WACIC,KAAKC,aACLD,KAAKE,eACR,2BAED,WACI,GAAuB,OAAnBF,KAAKN,UAAT,CAOA,IAAIK,EAAOC,KAAKG,mBAAmBC,KAAKC,MAAQL,KAAKN,WAErDM,KAAKM,SAAS,CACVV,WAAYG,GALf,MAJGC,KAAKM,SAAS,CACVV,WAAYI,KAAKH,kBAU5B,8BAED,WAC2B,OAAnBG,KAAKN,YAIMU,KAAKC,MAAQL,KAAKN,WACdM,KAAKX,MAAMW,KAAKX,MAAMkB,OAAS,GAAGT,SAEtB,MAC3BE,KAAKQ,QAEZ,mCAED,SAAmBV,GAAW,IAAD,YACFE,KAAKT,eADH,IACzB,2BAA2C,CAAC,IAAjCkB,EAAgC,QACvC,GAAIA,EAASX,UAAYA,EACrB,OAAOW,EAASV,IAEvB,CALwB,+BAOzB,OAAOC,KAAKH,gBACf,+BAED,WACI,OAAOG,KAAKX,MAAM,GAAGU,IACxB,6BAED,WACIC,KAAKN,UAAYU,KAAKC,KACzB,6BAED,WACIL,KAAKN,UAAY,IACpB,uBAED,WAAU,IAAD,OACL,OACI,0BACI,SAACgB,EAAA,EAAD,CACIC,UAAWC,EACXC,QAAS,kBAAM,EAAKC,MAAX,EACTC,aAAc,kBAAM,EAAKA,cAAX,EACdC,aAAc,kBAAM,EAAKA,cAAX,EAJlB,SAMKhB,KAAKL,MAAMC,cAI3B,OAxGgBT,CAAgB8B,EAAAA,GAAhB9B,EAEV+B,MAAQ,WAFE/B,EAIVgC,WAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EACAF,EAAAA,EAAAA,U","sources":["webpack://react_puzzles/./src/pages/puzzles/Puzzle3/Puzzle3.module.css?f37f","pages/puzzles/Puzzle3/Puzzle3.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Puzzle3_button__ppBo1\"};","import styles from './Puzzle3.module.css';\r\nimport React from 'react';\r\nimport AbstractPuzzle from './../../AbstractPuzzle.js';\r\nimport HackableButton from '../../../components/HackableButton/HackableButton.js';\r\n\r\nexport default class Puzzle3 extends AbstractPuzzle {\r\n\r\n    static title = 'Puzzle 3';\r\n\r\n    static propTypes = {\r\n        ...AbstractPuzzle.propTypes,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.texts = [\r\n            this.createText(0, 'Don\\'t press me'),\r\n            this.createText(200, 'Don\\'t press'),\r\n            this.createText(1500, 'DON\\'T PRESS'),\r\n            this.createText(3000, 'Don\\'t...'),\r\n            this.createText(5000, 'FAST! DON\\'T CLICK!'),\r\n            this.createText(6000, 'Well done'),\r\n        ];\r\n\r\n        this.reversedTexts = this.texts.slice().reverse();\r\n\r\n        this.enteredAt = null;\r\n\r\n        this.state = {\r\n            buttonText: this.getDefaultText(),\r\n        };\r\n    }\r\n\r\n    createText(duration, text) {\r\n        return {\r\n            duration,\r\n            text,\r\n        };\r\n    }\r\n\r\n    onAnimationFrame() {\r\n        this.updateText();\r\n        this.checkIfSolved();\r\n    }\r\n\r\n    updateText() {\r\n        if (this.enteredAt === null) {\r\n            this.setState({\r\n                buttonText: this.getDefaultText(),\r\n            });\r\n            return;\r\n        }\r\n\r\n        let text = this.getTextForDuration(Date.now() - this.enteredAt);\r\n\r\n        this.setState({\r\n            buttonText: text,\r\n        });\r\n    }\r\n\r\n    checkIfSolved() {\r\n        if (this.enteredAt === null) {\r\n            return;\r\n        }\r\n\r\n        let duration = Date.now() - this.enteredAt;\r\n        let lastDuration = this.texts[this.texts.length - 1].duration;\r\n\r\n        if (duration >= lastDuration + 1500) {\r\n            this.solve();\r\n        }\r\n    }\r\n\r\n    getTextForDuration(duration) {\r\n        for (const textInfo of this.reversedTexts) {\r\n            if (textInfo.duration <= duration) {\r\n                return textInfo.text;\r\n            }\r\n        }\r\n\r\n        return this.getDefaultText();\r\n    }\r\n\r\n    getDefaultText() {\r\n        return this.texts[0].text;\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.enteredAt = Date.now();\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.enteredAt = null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HackableButton\r\n                    className={styles.button}\r\n                    onClick={() => this.fail()}\r\n                    onMouseEnter={() => this.onMouseEnter()}\r\n                    onMouseLeave={() => this.onMouseLeave()}\r\n                >\r\n                    {this.state.buttonText}\r\n                </HackableButton>\r\n            </div>\r\n        );\r\n    }\r\n}"],"names":["Puzzle3","props","texts","createText","reversedTexts","slice","reverse","enteredAt","state","buttonText","getDefaultText","duration","text","this","updateText","checkIfSolved","getTextForDuration","Date","now","setState","length","solve","textInfo","HackableButton","className","styles","onClick","fail","onMouseEnter","onMouseLeave","AbstractPuzzle","title","propTypes"],"sourceRoot":""}